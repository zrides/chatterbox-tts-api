# Use Python 3.11 slim image as base
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    wget \
    curl \
    build-essential \
    ffmpeg \
    libsndfile1 \
    && rm -rf /var/lib/apt/lists/*

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv

# Set working directory
WORKDIR /app

# Create virtual environment
RUN uv venv --python 3.11

# Install PyTorch with CPU support using uv
RUN uv pip install torch==2.6.0 torchvision==0.21.0 torchaudio==2.6.0 --index-url https://download.pytorch.org/whl/cpu

# Install base dependencies first
RUN uv pip install fastapi uvicorn[standard] python-dotenv python-multipart requests psutil

# Install resemble-perth specifically (required for watermarker)
RUN uv pip install resemble-perth

# Verify resemble-perth installation
RUN . .venv/bin/activate && python -c "import perth; print('✓ resemble-perth installed successfully')"

# Install chatterbox-tts after ensuring perth is available
RUN uv pip install "chatterbox-tts @ git+https://github.com/resemble-ai/chatterbox.git"

# Verify full installation
RUN . .venv/bin/activate && python -c "import chatterbox; import perth; print('✓ All dependencies installed successfully')"

# Copy application code
COPY app/ ./app/
COPY main.py ./

# Copy voice sample if it exists (optional, can be mounted)
COPY voice-sample.mp3 ./voice-sample.mp3

# Create directory for model cache (separate from source code)
RUN mkdir -p /cache

# Set default environment variables
ENV PORT=4123
ENV EXAGGERATION=0.5
ENV CFG_WEIGHT=0.5
ENV TEMPERATURE=0.8
ENV VOICE_SAMPLE_PATH=/app/voice-sample.mp3
ENV MAX_CHUNK_LENGTH=280
ENV MAX_TOTAL_LENGTH=3000
ENV DEVICE=auto
ENV MODEL_CACHE_DIR=/cache
ENV HOST=0.0.0.0

# Add uv venv to PATH
ENV PATH="/app/.venv/bin:$PATH"

# Expose port
EXPOSE ${PORT}

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5m --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Run the application using the new entry point
CMD ["python", "main.py"] 